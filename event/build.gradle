/*
 * MIT License
 *
 * Copyright (c) 2025 Kalculos and Contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
plugins {
    id "me.champeau.jmh" version "0.7.3"
}

jmh {
    profilers = ['jfr:dir=profile-results']
    fork = 2
    iterations = 3
    def fastDebugJdk = System.getProperty("FASTDEBUG_JDK_HOME", "/home/icybear/fastdebug/jdk/bin/java")
    if (System.getProperty("fastdebug") != null) {
        println("fastdebug mode")
        jvm = fastDebugJdk
        jvmArgsPrepend = ["-fastdebug"]
        jvmArgsAppend = ["-XX:+UnlockDiagnosticVMOptions",
                         "-XX:+PrintAssembly",
                         "-XX:LogFile=jitlog.log",
                         "-XX:+DebugNonSafepoints",
                         "-Xlog:class+load=info",
                         "-XX:+LogCompilation"]
        fork = 1
    }
    if (System.getProperty("perfasm") != null) {
        println("perfasm mode")
        jvm = fastDebugJdk
        profilers = ["perfasm:intelSyntax=true;tooBigThreshold=1500;top=3"]
        jvmArgsAppend = [
                "-XX:+UnlockDiagnosticVMOptions",
                "-XX:+PrintAssembly",
                "-XX:+PrintNMethods ",
                "-XX:+PrintNativeNMethods",
                "-XX:+PrintSignatureHandlers",
                "-XX:+PrintAdapterHandlers",
                "-XX:+PrintStubCode",
                "-XX:+LogCompilation",
                "-XX:LogFile=hotspot.log"]
    }
}

java {
    withSourcesJar()
}

dependencies {
    implementation 'org.ow2.asm:asm:9.8'
    api project(":lang")
    testRuntimeOnly project(":lang")
}