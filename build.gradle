/*
 * MIT License
 *
 * Copyright (c) 2025 Kalculos and Contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
    id("io.freefair.lombok") version "8.13.1"
    id 'jacoco'
    id 'maven-publish'
}

allprojects {
    group property("project.group")
    version property("project.version")
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    if (project.name == "javadoc") {
        return
    }
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'jacoco'

    dependencies {
        compileOnly 'org.jetbrains:annotations:23.0.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    }
    test {
        useJUnitPlatform()
    }
    def targetJavaVersion = Integer.parseInt(property("java.version"))
    tasks.withType(JavaCompile).configureEach {
        // ensure that the encoding is set to UTF-8, no matter what the system default is
        // this fixes some edge cases with special characters not displaying correctly
        // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
        // If Javadoc is generated, this must be specified in that task too.
        it.options.encoding = "UTF-8"
        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            it.options.release.set(targetJavaVersion)
        }
    }
    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
        withSourcesJar()
        withJavadocJar()
    }
    publishing {
        publications {
            artifact(MavenPublication) {
                artifactId = project.name
                group = project.group
                version = project.version
                from components.java
            }
        }
    }
}

allprojects {
    afterEvaluate {
        publishing {
            repositories {
                maven {
                    name = "KiwiKalculos"
                    url = "https://repo.sfclub.cc/" + (project.version.endsWith("SNAPSHOT") ? "snapshots" : "releases")
                    credentials(PasswordCredentials)
                    authentication {
                        basic(BasicAuthentication)
                    }
                }
            }
        }

    }
}